import type { Options, ContainerOffset } from './type';
export default class Board {
    canvas: HTMLCanvasElement;
    private width;
    private height;
    private ctx;
    private worldOffsetX;
    private worldOffsetY;
    private scrolling;
    private d;
    private maxD;
    private pointsGroup;
    private cleanState;
    private cleanX?;
    private cleanY?;
    private cleanPress;
    private stackObj;
    private minX;
    private minY;
    private maxX;
    private maxY;
    private moveT;
    grid: boolean;
    gridGap: number;
    gridPattern: CanvasPattern;
    gridFillStyle: string;
    rule: boolean;
    ruleGap: number;
    ruleUnitLen: number;
    ruleStrokeStyle: string;
    voice: number;
    color: string;
    cleanR: number;
    stack: boolean;
    moveCountTotal: number;
    writeLocked: boolean;
    dragLocked: boolean;
    showBorder: boolean;
    borderStyle: string;
    borderWidth: number;
    containerOffset: ContainerOffset;
    constructor(canvas: HTMLCanvasElement, options?: Options);
    setVoice(voice?: number): void;
    showGrid(): void;
    hideGrid(): void;
    showRule(): void;
    hideRule(): void;
    private doMove;
    scrollBy(x?: number, y?: number): void;
    clear(): void;
    exportAsCanvas(): HTMLCanvasElement;
    undo(): void;
    redo(): void;
    clean(): void;
    unclean(): void;
    private draw;
    private loadEvent;
    private drawEraser;
    private doClean;
    private isCircleIntersectRect;
    private getCornerCoordinate;
    private getCornersCoordinate;
    private pushPoints;
    private doWriting;
    private generateGridPattern;
    private loadGrid;
    private negativeRemainder;
    private loadBorder;
    private loadRule;
}
export { Board };
